package com.tracker.expense.db.dto.home;

import java.lang.reflect.Array;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import com.tracker.expense.db.dto.CategoriaDto;
import com.tracker.expense.db.dto.SearchDto;
import com.tracker.expense.web.rest.service.OperationRestResult;

public abstract class ParentPersistenceHome {
	
	@PersistenceContext private EntityManager entityManager;
	
	private Class<?> dtoCatalog = CategoriaDto.class;
	
	public ParentPersistenceHome() {
		
	}
	
	/*
	public OperationRestResult upsertDto(Object dto) {
		// TODO Auto-generated method stub
		return null;
	}

	public OperationRestResult removeDto(SearchDto dto) {
		// TODO Auto-generated method stub
		return null;
	}

	public OperationRestResult getDto(SearchDto dto) {
		// TODO Auto-generated method stub
		return null;
	}
	*/
	@SuppressWarnings("unchecked")
	public OperationRestResult listDto(SearchDto dto) {
		
		String temp = "";
		
		if( dto.getOrderFields() != null && dto.getOrderFields().length > 0 ) {
			
			for(String x : dto.getOrderFields() ) {
				if( temp.length() <= 0 )
					temp = " order by c."+x;
				else
					temp+=",c."+x;
			}
		}
		
		//crear Query para obtener la lista de cuentas ordenadas por tipo y nombre
		Query q = entityManager.createQuery(getDtoQuery()+temp);
		
		//en caso de estar especificado, limitar resultados
		if( dto.getLimite() > 0 ) {
			q.setMaxResults(dto.getLimite());
			q.setFirstResult(dto.getPagina()*dto.getLimite());
		}
		
		
		List<Object> res2 = null;
		
		//intentar traer la lista de resultados
		try {
			res2 = q.getResultList();
		}catch(Exception ex) {
			return new OperationRestResult(false, "error al intentar obtener lista "+ex.getMessage());
		}
				
		//crear una resupuesta exitosa
		OperationRestResult rs = new OperationRestResult(true, null);
		
		//agregar el numero total de resultados, esto es un count(*)
		rs.setResults(0);
		
		//convertir de lista a arreglo y asignarlo a data del resultado
		rs.setData(res2.toArray());

		//regresar respuesta
		return rs;
	}
	
	public abstract String getDtoQuery();

	
	
}
