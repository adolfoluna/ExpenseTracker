package com.tracker.expense.db.model;
// Generated Oct 3, 2019, 1:28:57 AM by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Transaccion generated by hbm2java
 */
@Entity
@Table(name="transaccion"
    ,catalog="expensetrackerdb"
)
public class Transaccion  implements java.io.Serializable {


     private Integer idtransaccion;
     private int version;
     private Proveedor proveedor;
     private Cuenta cuenta;
     private Date fecha;
     private String articulos;
     private long total;
     private double tipocambio;
     private long totalbase;
     private String ticket;
     private String pago;
     private String factura;
     private String complemento;
     private byte complementorequerido;
     private String voucher;
     private String nota;
     private Set<TransaccionArticulo> transaccionArticulos = new HashSet<TransaccionArticulo>(0);

    public Transaccion() {
    }

	
    public Transaccion(Proveedor proveedor, Cuenta cuenta, Date fecha, long total, double tipocambio, long totalbase, byte complementorequerido) {
        this.proveedor = proveedor;
        this.cuenta = cuenta;
        this.fecha = fecha;
        this.total = total;
        this.tipocambio = tipocambio;
        this.totalbase = totalbase;
        this.complementorequerido = complementorequerido;
    }
    public Transaccion(Proveedor proveedor, Cuenta cuenta, Date fecha, String articulos, long total, double tipocambio, long totalbase, String ticket, String pago, String factura, String complemento, byte complementorequerido, String voucher, String nota, Set<TransaccionArticulo> transaccionArticulos) {
       this.proveedor = proveedor;
       this.cuenta = cuenta;
       this.fecha = fecha;
       this.articulos = articulos;
       this.total = total;
       this.tipocambio = tipocambio;
       this.totalbase = totalbase;
       this.ticket = ticket;
       this.pago = pago;
       this.factura = factura;
       this.complemento = complemento;
       this.complementorequerido = complementorequerido;
       this.voucher = voucher;
       this.nota = nota;
       this.transaccionArticulos = transaccionArticulos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="idtransaccion", unique=true, nullable=false)
    public Integer getIdtransaccion() {
        return this.idtransaccion;
    }
    
    public void setIdtransaccion(Integer idtransaccion) {
        this.idtransaccion = idtransaccion;
    }
    @Version
    @Column(name="version", nullable=false)
    public int getVersion() {
        return this.version;
    }
    
    public void setVersion(int version) {
        this.version = version;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idproveedor", nullable=false)
    public Proveedor getProveedor() {
        return this.proveedor;
    }
    
    public void setProveedor(Proveedor proveedor) {
        this.proveedor = proveedor;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idcuenta", nullable=false)
    public Cuenta getCuenta() {
        return this.cuenta;
    }
    
    public void setCuenta(Cuenta cuenta) {
        this.cuenta = cuenta;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha", nullable=false, length=26)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }
    
    @Column(name="articulos", length=50)
    public String getArticulos() {
        return this.articulos;
    }
    
    public void setArticulos(String articulos) {
        this.articulos = articulos;
    }
    
    @Column(name="total", nullable=false)
    public long getTotal() {
        return this.total;
    }
    
    public void setTotal(long total) {
        this.total = total;
    }
    
    @Column(name="tipocambio", nullable=false, precision=22, scale=0)
    public double getTipocambio() {
        return this.tipocambio;
    }
    
    public void setTipocambio(double tipocambio) {
        this.tipocambio = tipocambio;
    }
    
    @Column(name="totalbase", nullable=false)
    public long getTotalbase() {
        return this.totalbase;
    }
    
    public void setTotalbase(long totalbase) {
        this.totalbase = totalbase;
    }
    
    @Column(name="ticket", length=50)
    public String getTicket() {
        return this.ticket;
    }
    
    public void setTicket(String ticket) {
        this.ticket = ticket;
    }
    
    @Column(name="pago", length=50)
    public String getPago() {
        return this.pago;
    }
    
    public void setPago(String pago) {
        this.pago = pago;
    }
    
    @Column(name="factura", length=50)
    public String getFactura() {
        return this.factura;
    }
    
    public void setFactura(String factura) {
        this.factura = factura;
    }
    
    @Column(name="complemento", length=50)
    public String getComplemento() {
        return this.complemento;
    }
    
    public void setComplemento(String complemento) {
        this.complemento = complemento;
    }
    
    @Column(name="complementorequerido", nullable=false)
    public byte getComplementorequerido() {
        return this.complementorequerido;
    }
    
    public void setComplementorequerido(byte complementorequerido) {
        this.complementorequerido = complementorequerido;
    }
    
    @Column(name="voucher", length=50)
    public String getVoucher() {
        return this.voucher;
    }
    
    public void setVoucher(String voucher) {
        this.voucher = voucher;
    }
    
    @Column(name="nota", length=150)
    public String getNota() {
        return this.nota;
    }
    
    public void setNota(String nota) {
        this.nota = nota;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="transaccion")
    public Set<TransaccionArticulo> getTransaccionArticulos() {
        return this.transaccionArticulos;
    }
    
    public void setTransaccionArticulos(Set<TransaccionArticulo> transaccionArticulos) {
        this.transaccionArticulos = transaccionArticulos;
    }




}


